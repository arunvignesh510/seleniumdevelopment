testing points:
---------------

1) SDLC - Software Development Life Cycle
 *planning /Requirement gathering
1)Requirement analysis
2)design
3)implementation/coding
4)Testing
5)deployment
6)maintanance

----------------------

2)STLC
*Requirement analysis
*test planning
*Test Design /Test case development
*Test environmemtal setup
*Test execution /Defect logging
*Test closure

test planning:
1)Analysis the product
2)develop the strategy
3)define test objective
4)plan test environment
5)determine deliverables
6)schedule and estimation
7)define test criteria
8)resource planning

Test strategy - resource planning / automation stratagy / Test schedule 
Test Development - test plan / Test script /test data

--------------------------------------

AGILE : 

In the Agile model, both development and testing activities are concurrent, unlike the Waterfall model.
iteration method
development and testing done side by side

----
Agile model believes that every project needs to be handled differently and the existing methods need to be tailored to best suit the project requirements. 
In Agile, the tasks are divided to time boxes (small time frames) to deliver specific features for a release.

Iterative approach is taken and working software build is delivered after each iteration. Each build is incremental in terms of features; 
the final build holds all the features required by the customer.



-----------------------------------------


**********Agile Model - Pros and Cons
Agile methods are being widely accepted in the software world recently. However, this method may not always be suitable for all products. Here are some pros and cons of the Agile model.

***********The advantages of the Agile Model are as follows −

Is a very realistic approach to software development.

Promotes teamwork and cross training.

Functionality can be developed rapidly and demonstrated.

Resource requirements are minimum.

Suitable for fixed or changing requirements

Delivers early partial working solutions.

Good model for environments that change steadily.

Minimal rules, documentation easily employed.

Enables concurrent development and delivery within an overall planned context.

Little or no planning required.

Easy to manage.

Gives flexibility to developers.

**********The disadvantages of the Agile Model are as follows −

Not suitable for handling complex dependencies.

More risk of sustainability, maintainability and extensibility.

An overall plan, an agile leader and agile PM practice is a must without which it will not work.

Strict delivery management dictates the scope, functionality to be delivered, and adjustments to meet the deadlines.

Depends heavily on customer interaction, so if customer is not clear, team can be driven in the wrong direction.

There is a very high individual dependency, since there is minimum documentation generated.

Transfer of technology to new team members may be quite challenging due to lack of documentation.



-------------------------------------------------------------------------

*******Following are the Agile Manifesto principles −

Individuals and interactions − In Agile development, self-organization and motivation are important, as are interactions like co-location and pair programming.

Working software − Demo working software is considered the best means of communication with the customers to understand their requirements, instead of just depending on documentation.

Customer collaboration − As the requirements cannot be gathered completely in the beginning of the project due to various factors, continuous customer interaction is very important to get proper product requirements.

Responding to change − Agile Development is focused on quick responses to change and continuous development.


----------------------------------

Water fall model :

*The Waterfall Model was the first Process Model to be introduced. It is also referred to as a linear-sequential life cycle model. It is very simple to understand and use. In a waterfall model, each phase must be completed before the next phase can begin and there is no overlapping in the phases.
*The Waterfall model is the earliest SDLC approach that was used for software development.
*The waterfall Model illustrates the software development process in a linear sequential flow. This means that any phase in the development process begins only if the previous phase is complete. In this waterfall model, the phases do not overlap.